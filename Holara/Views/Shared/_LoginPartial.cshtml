@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager  

@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "User" })" method="post" id="logoutForm">
        <li class="animated bounceInUp"  style="margin-left: 60px;">
            <div class="dropdown">
                <a class="dropbtn" style="font-size:15px; "><span style="font-weight:bold;">Hello</span> @UserManager.GetUserAsync(User).Result.UserName!</a>
                @*<button disabled class="dropbtn">
                    <p title="Manage">Hello @UserManager.GetUserAsync(User).Result.UserName!</p>
                </button>*@
                <div class="dropdown-content">
                    <a asp-area="Identity" asp-page="/Account/Manage/ChangePassword">Password</a>
                    <a asp-area="Identity" asp-page="/Account/Manage/TwoFactorAuthentication">Two-factor authentication</a>
                    <a asp-area="Identity" asp-page="/Account/Manage/PersonalData">Personal data</a>
                </div>
            </div>
        </li>
        <li class="animated  bounceInDown" style="margin-top:-6px; margin-left: 20px;">
            <button type="submit" class="button">Logout</button>
        </li>
        
    </form>
}
else
{
    <li class="animated bounceInDown"><a asp-area="Identity" asp-page="/Account/Register">Register</a></li>
    <li class="animated bounceInUp"><a asp-area="Identity" asp-page="/Account/Login">Login</a></li>
}
